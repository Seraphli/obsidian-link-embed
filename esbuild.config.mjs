import esbuild from 'esbuild';
import process from 'process';
import builtins from 'builtin-modules';

const banner = `/*\nTHIS IS A GENERATED/BUNDLED FILE BY ESBUILD\nif you want to view the source, please visit the github repository of this plugin\n*/\n`;

const mode = process.argv[2];
const prod = mode === 'production';
const watch = mode === 'watch';

const buildOptions = {
  banner: { js: banner },
  entryPoints: ['main.ts'],
  bundle: true,
  external: [
	'obsidian',
	'electron',
	'@codemirror/autocomplete',
	'@codemirror/closebrackets',
	'@codemirror/collab',
	'@codemirror/commands',
	'@codemirror/comment',
	'@codemirror/fold',
	'@codemirror/gutter',
	'@codemirror/highlight',
	'@codemirror/history',
	'@codemirror/language',
	'@codemirror/lint',
	'@codemirror/matchbrackets',
	'@codemirror/panel',
	'@codemirror/rangeset',
	'@codemirror/rectangular-selection',
	'@codemirror/search',
	'@codemirror/state',
	'@codemirror/stream-parser',
	'@codemirror/text',
	'@codemirror/tooltip',
	'@codemirror/view',
	...builtins,
  ],
  format: 'cjs',
  target: 'es2016',
  logLevel: 'info',
  sourcemap: prod ? false : 'inline',
  treeShaking: true,
  outfile: 'main.js',
};

async function run() {
  if (watch) {
	const ctx = await esbuild.context(buildOptions);
	await ctx.watch();
	console.log('Watching for changes...');
  } else {
	await esbuild.build(buildOptions);
  }
}

run().catch(() => process.exit(1));
